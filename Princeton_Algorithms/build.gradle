apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

sourceCompatibility = 1.8
version = '1.0'
jar {
  manifest {
    attributes 'Implementation-Title': 'Gradle Quickstart',
        'Implementation-Version': version
  }
}

buildscript {
  repositories {
    mavenCentral()
  }
}

repositories {
  mavenCentral()
  flatDir {
    dirs 'libs'
  }
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.+'
  compile fileTree(dir: 'lib', include: '*.jar')
}

uploadArchives {
  repositories {
    flatDir {
      dirs 'repos'
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.3'
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

tasks.withType(Checkstyle) {
  reports {
    xml.enabled false
    html.enabled true
  }
}

findbugs {
  includeFilter = file("config/findbugs/findbugs.xml")
  ignoreFailures = true
}

pmd {
  ruleSetFiles = files("config/pmd/pmd.xml")
  ignoreFailures = true
}

checkstyle {
  configFile = file('config/checkstyle/checkstyle.xml')
}

tasks.withType(Checkstyle) {
  exclude '**/QuizQuestion3.java'
  exclude '**/PercolationStatsTest.java'
  exclude '**/PercolationTest.java'
  exclude '**/alg/*.java'
  exclude '**/experiments/*.java'
}

def getZippedFiles(path, ignore = null) {
  def target = []
  new File(path).eachFile {
    if (it.isFile() && (!ignore || !(it.name in ignore))) {
      target << it
    }
  }
  [target]
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java/coursera/princetonalgs/part1/week1'
      srcDir 'src/main/java/coursera/princetonalgs/part1/week2'
      srcDir 'src/main/java/coursera/princetonalgs/part1/week3'
      srcDir 'src/main/java/coursera/princetonalgs/part1/week4'
      srcDir 'src/main/java/coursera/princetonalgs/part1/week5'
    }
  }
}

task submissionWeek1(type: Zip) {
  from {
    getZippedFiles('src/main/java/coursera/princetonalgs/part1/week1')
  }
  destinationDir file('submissions/part1/week1')
  version ''
  baseName 'percolation'
  appendix ''
}

task submissionWeek2(type: Zip) {
  from {
    getZippedFiles('src/main/java/coursera/princetonalgs/part1/week2')
  }
  destinationDir file('submissions/part1/week2')
  version ''
  baseName 'queues'
  appendix ''
}

task submissionWeek3(type: Zip) {
  from {
    getZippedFiles('src/main/java/coursera/princetonalgs/part1/week3', [
        'LineSegment.java', 'BruteForceClient.java', 'FastClient.java'])
  }
  destinationDir file('submissions/part1/week3')
  version ''
  baseName 'collinear'
  appendix ''
}

task submissionWeek4(type: Zip) {
  from {
    getZippedFiles('src/main/java/coursera/princetonalgs/part1/week4', [])
  }
  destinationDir file('submissions/part1/week4')
  version ''
  baseName 'puzzle'
  appendix ''
}

task submissionWeek5(type: Zip) {
  from {
    getZippedFiles('src/main/java/coursera/princetonalgs/part1/week5', [
        'KdTreeVisualizer.java', 'RangeSearchVisualizer.java', 'NearestNeighborVisualizer.java'
    ])
  }
  destinationDir file('submissions/part1/week5')
  version ''
  baseName 'kdtree'
  appendix ''
}

build.dependsOn submissionWeek1
build.dependsOn submissionWeek2
build.dependsOn submissionWeek3
build.dependsOn submissionWeek4
build.dependsOn submissionWeek5
